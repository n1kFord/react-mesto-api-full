{"ast":null,"code":"var BASE_URL=\"https://api.backendishard.nomoreparties.sbs\";export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(response){return response.json();}).then(function(res){return res;}).catch(function(err){return console.log(err);});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(response){return response.json();}).then(function(data){if(data.token){localStorage.setItem(\"jwt\",data.token);return data.token;}}).catch(function(err){return console.log(err);});};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(function(res){return res.json();}).then(function(data){return data;});};","map":{"version":3,"sources":["C:/Users/User/dev/mesto-full/frontend/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","catch","err","console","log","authorize","data","token","localStorage","setItem","checkToken"],"mappings":"AAAA,GAAMA,CAAAA,QAAQ,CAAG,6CAAjB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAER,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAN2B,CAAvB,CAAL,CAQJQ,IARI,CAQC,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAVI,EAWJF,IAXI,CAWC,SAACG,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CAbI,EAcJC,KAdI,CAcE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EAdF,CAAP,CAeD,CAhBM,CAkBP,MAAO,IAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACjB,KAAD,CAAQC,QAAR,CAAqB,CAC5C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAER,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAN2B,CAAvB,CAAL,CAQJQ,IARI,CAQC,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EARD,EASJF,IATI,CASC,SAACS,IAAD,CAAU,CACd,GAAIA,IAAI,CAACC,KAAT,CAAgB,CACdC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4BH,IAAI,CAACC,KAAjC,EACA,MAAOD,CAAAA,IAAI,CAACC,KAAZ,CACD,CACF,CAdI,EAeJN,KAfI,CAeE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EAfF,CAAP,CAgBD,CAjBM,CAmBP,MAAO,IAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,KAAD,CAAW,CACjC,MAAOjB,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAGP,iCAA2Be,KAA3B,CAHO,CAF0B,CAAzB,CAAL,CAQNV,IARM,CAQD,SAAAG,GAAG,QAAIA,CAAAA,GAAG,CAACD,IAAJ,EAAJ,EARF,EASNF,IATM,CASD,SAAAS,IAAI,QAAIA,CAAAA,IAAJ,EATH,CAAP,CAUD,CAXI","sourcesContent":["const BASE_URL = \"https://api.backendishard.nomoreparties.sbs\";\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.token) {\r\n        localStorage.setItem(\"jwt\", data.token);\r\n        return data.token;\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n  }"]},"metadata":{},"sourceType":"module"}