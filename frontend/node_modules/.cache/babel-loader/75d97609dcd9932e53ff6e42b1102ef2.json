{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { api } from \"../utils/Api\";\nimport { currentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  /* profile-edit-popup */\n\n  const [isNewAvatarPopupOpen, setIsNewAvatarPopupOpen] = React.useState(false);\n  /* new-avatar-popup */\n\n  const [isCardDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false);\n  /* card-delete-popup */\n\n  const [isCardAddPopupOpen, setIsCardAddPopupOpen] = React.useState(false);\n  /* card-add-popup */\n\n  /*_states_of_image|imagePopup______*/\n\n  const [isElementPopupOpen, setIsElementPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: \"\",\n    link: \"\"\n  });\n  /*---------------------------*/\n\n  /* currentUser_state */\n\n  const [currentUser, setCurrentUser] = React.useState({\n    avatar: \"\",\n    name: \"\",\n    description: \"\",\n    id: \"\"\n  });\n  /*---------------------------*/\n\n  /* user_input_ref */\n\n  const avatarInputRef = React.useRef();\n  console.log(avatarInputRef);\n  /*---------------------------*/\n\n  React.useEffect(() => {\n    api.getInfoAboutUser().then(res => {\n      setCurrentUser({ ...currentUser,\n        avatar: res.avatar,\n        name: res.name,\n        description: res.about,\n        id: res._id\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleUpdateUser(newUserInfo) {\n    console.log(newUserInfo);\n    api.setInfoAboutUser(newUserInfo).then(res => {\n      setCurrentUser({ ...currentUser,\n        name: res.name,\n        description: res.about\n      });\n      setIsEditProfilePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsNewAvatarPopupOpen(false);\n    setIsDeletePopupOpen(false);\n    setIsCardAddPopupOpen(false);\n    setIsElementPopupOpen(false);\n    setSelectedCard({\n      name: \"\",\n      link: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App page\",\n    children: /*#__PURE__*/_jsxDEV(currentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: () => {\n          setIsEditProfilePopupOpen(true);\n        },\n        onCardAdd: () => {\n          setIsCardAddPopupOpen(true);\n        },\n        onNewAvatar: () => {\n          setIsNewAvatarPopupOpen(true);\n        },\n        onCardClick: (name, link) => {\n          setSelectedCard({\n            name: name,\n            link: link\n          });\n          setIsElementPopupOpen(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isNewAvatarPopupOpen,\n        onClose: closeAllPopups,\n        ref: avatarInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: newInfo => {\n          handleUpdateUser(newInfo);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"card-delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        formName: \"delete\",\n        isOpen: isCardDeletePopupOpen,\n        formClass: \"popup__form_type_delete-popup\",\n        buttonLabel: \"\\u0414\\u0430\",\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"card-add\",\n        title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n        formName: \"add\",\n        isOpen: isCardAddPopupOpen,\n        formClass: \"popup__form_type_card-add\",\n        buttonLabel: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n        onClose: closeAllPopups,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"popup__input popup__input_type_card-name\",\n          name: \"cardname\",\n          id: \"cardname-input\",\n          minLength: 2,\n          maxLength: 30,\n          required: true,\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__form-placeholder cardname-input-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          className: \"popup__input popup__input_type_card-link\",\n          name: \"link\",\n          id: \"link-input\",\n          required: true,\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__form-placeholder link-input-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        onClose: closeAllPopups,\n        isOpen: isElementPopupOpen,\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qTqFYAfhYMy+uvTlRK1OVOxk6fo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/dev/mesto-react/src/components/App.js"],"names":["React","api","currentUserContext","Header","Main","Footer","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isNewAvatarPopupOpen","setIsNewAvatarPopupOpen","isCardDeletePopupOpen","setIsDeletePopupOpen","isCardAddPopupOpen","setIsCardAddPopupOpen","isElementPopupOpen","setIsElementPopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","avatar","description","id","avatarInputRef","useRef","console","log","useEffect","getInfoAboutUser","then","res","about","_id","catch","err","handleUpdateUser","newUserInfo","setInfoAboutUser","closeAllPopups","newInfo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { api } from \"../utils/Api\";\nimport { currentUserContext } from \"../contexts/CurrentUserContext\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); /* profile-edit-popup */\n  const [isNewAvatarPopupOpen, setIsNewAvatarPopupOpen] = React.useState(false); /* new-avatar-popup */\n  const [isCardDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false); /* card-delete-popup */\n  const [isCardAddPopupOpen, setIsCardAddPopupOpen] = React.useState(false); /* card-add-popup */\n\n  /*_states_of_image|imagePopup______*/\n  const [isElementPopupOpen, setIsElementPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({ name: \"\", link: \"\" });\n  /*---------------------------*/\n\n  /* currentUser_state */\n  const [currentUser, setCurrentUser] = React.useState({\n    avatar: \"\",\n    name: \"\",\n    description: \"\",\n    id: \"\"\n  });\n  /*---------------------------*/\n\n  /* user_input_ref */\n  const avatarInputRef = React.useRef();\n  console.log(avatarInputRef);\n  /*---------------------------*/\n  React.useEffect(() => {\n    api\n      .getInfoAboutUser()\n      .then((res) => {\n        setCurrentUser({\n          ...currentUser,\n          avatar: res.avatar,\n          name: res.name,\n          description: res.about,\n          id: res._id,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleUpdateUser(newUserInfo) {\n    console.log(newUserInfo);\n    api\n      .setInfoAboutUser(newUserInfo)\n      .then((res) => {\n        setCurrentUser({\n          ...currentUser,\n          name: res.name,\n          description: res.about,\n        });\n        setIsEditProfilePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsNewAvatarPopupOpen(false);\n    setIsDeletePopupOpen(false);\n    setIsCardAddPopupOpen(false);\n    setIsElementPopupOpen(false);\n\n    setSelectedCard({ name: \"\", link: \"\", });\n  }\n\n  return (\n    <div className=\"App page\">\n      <currentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          onEditProfile={() => {\n            setIsEditProfilePopupOpen(true);\n          }}\n          onCardAdd={() => {\n            setIsCardAddPopupOpen(true);\n          }}\n          onNewAvatar={() => {\n            setIsNewAvatarPopupOpen(true);\n          }}\n          onCardClick={(name, link) => {\n            setSelectedCard({ name: name, link: link, });\n            setIsElementPopupOpen(true);\n          }}\n        />\n        <Footer />\n\n        {/*___________overlays*_____________*/}\n\n        {/*.new-avatar-popup.*/}\n        <EditAvatarPopup \n          isOpen={isNewAvatarPopupOpen}\n          onClose={closeAllPopups}\n          ref={avatarInputRef}\n        />\n\n        {/*.profile-edit-popup.*/}\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={(newInfo) => {\n            handleUpdateUser(newInfo);\n          }}\n        />\n\n        {/*.card-delete-popup.*/}\n        <PopupWithForm\n          name=\"card-delete\"\n          title=\"Вы уверены?\"\n          formName=\"delete\"\n          isOpen={isCardDeletePopupOpen}\n          formClass=\"popup__form_type_delete-popup\"\n          buttonLabel=\"Да\"\n          onClose={closeAllPopups}\n        ></PopupWithForm>\n\n        {/*.card-add-popup.*/}\n        <PopupWithForm\n          name=\"card-add\"\n          title=\"Новое место\"\n          formName=\"add\"\n          isOpen={isCardAddPopupOpen}\n          formClass=\"popup__form_type_card-add\"\n          buttonLabel=\"Создать\"\n          onClose={closeAllPopups}\n        >\n          <input\n            type=\"text\"\n            className=\"popup__input popup__input_type_card-name\"\n            name=\"cardname\"\n            id=\"cardname-input\"\n            minLength={2}\n            maxLength={30}\n            required\n            placeholder=\"Название\"\n          />\n          <span className=\"popup__form-placeholder cardname-input-error\" />\n          <input\n            type=\"url\"\n            className=\"popup__input popup__input_type_card-link\"\n            name=\"link\"\n            id=\"link-input\"\n            required\n            placeholder=\"Ссылка на картинку\"\n          />\n          <span className=\"popup__form-placeholder link-input-error\" />\n        </PopupWithForm>\n\n        {/*.element-popup.*/}\n        <ImagePopup\n          onClose={closeAllPopups}\n          isOpen={isElementPopupOpen}\n          card={selectedCard}\n        />\n      </currentUserContext.Provider>\n      {/* весь код отформатирован при помощи prettier(vs-code) */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}