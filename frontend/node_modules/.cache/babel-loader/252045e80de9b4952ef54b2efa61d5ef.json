{"ast":null,"code":"const BASE_URL = \"https://api.backendishard.nomoreparties.sbs\";\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    console.log(data);\n\n    if (data.token) {\n      console.log('?');\n      localStorage.setItem(\"jwt\", data.token);\n      console.log(localStorage.getItem(\"jwt\"));\n      return data.token;\n    }\n  }).catch(err => console.log(err));\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"sources":["C:/Users/User/dev/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","catch","err","console","log","authorize","data","token","localStorage","setItem","getItem","checkToken"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,6CAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAN2B,GAAvB,CAAL,CAQJQ,IARI,CAQEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVI,EAWJF,IAXI,CAWEG,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GAbI,EAcJC,KAdI,CAcGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAdX,CAAP;AAeD,CAhBM;AAkBP,OAAO,MAAMG,SAAS,GAAG,CAACjB,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAN2B,GAAvB,CAAL,CAQJQ,IARI,CAQEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARf,EASJF,IATI,CASES,IAAD,IAAU;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AACA,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,KAAjC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,YAAY,CAACE,OAAb,CAAqB,KAArB,CAAZ;AACA,aAAOJ,IAAI,CAACC,KAAZ;AACD;AACF,GAjBI,EAkBJN,KAlBI,CAkBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAlBX,CAAP;AAmBD,CApBM;AAsBP,OAAO,MAAMS,UAAU,GAAIJ,KAAD,IAAW;AACjC,SAAOjB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,uBAAkB,UAASe,KAAM;AAH1B;AAF0B,GAAzB,CAAL,CAQNV,IARM,CAQDG,GAAG,IAAIA,GAAG,CAACD,IAAJ,EARN,EASNF,IATM,CASDS,IAAI,IAAIA,IATP,CAAP;AAUD,CAXI","sourcesContent":["const BASE_URL = \"https://api.backendishard.nomoreparties.sbs\";\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data);\r\n      if (data.token) {\r\n        console.log('?');\r\n        localStorage.setItem(\"jwt\", data.token);\r\n        console.log(localStorage.getItem(\"jwt\"));\r\n        return data.token;\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n  }"]},"metadata":{},"sourceType":"module"}