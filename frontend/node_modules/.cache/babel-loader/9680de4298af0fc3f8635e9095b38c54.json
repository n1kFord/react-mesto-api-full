{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\dev\\\\mesto-react\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { api } from \"../utils/Api\";\nimport Card from \"./Card\";\nimport profileImageAfterPath from \"../images/profile__image_after.svg\";\nimport ImagePopup from \"./ImagePopup\";\nimport defaultProfileImagePath from \"../images/profile__image.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /* дефолтная картинка, если у пользователя отсутствует соединение */\n}\n\nfunction Main(props) {\n  _s();\n\n  {\n    /*_states_of_overlays______*/\n  }\n  const [isCardDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false);\n  {\n    /* card-delete-popup */\n  }\n  /*---------------------------*/\n\n  {\n    /*_states_of_userData______*/\n  }\n  const [userDescription, setUserDescription] = React.useState('Hard to write on React');\n  const [userAvatar, setUserAvatar] = React.useState(`${defaultProfileImagePath}`);\n  const [userName, setUserName] = React.useState('Typical-nedo-junior');\n  /*---------------------------*/\n\n  {\n    /*_state_of_imagePopup______*/\n  }\n  const [isElementPopupOpen, setIsElementPopupOpen] = React.useState(false);\n  {\n    /* element-popup */\n  }\n  const [data, setData] = React.useState({\n    'name': '',\n    'link': ''\n  });\n  /*---------------------------*/\n\n  {\n    /*_state_of_cardArray______*/\n  }\n  const [cards, setCards] = React.useState([]);\n  /*---------------------------*/\n\n  React.useEffect(() => {\n    api.getInfoAboutUser().then(res => {\n      setUserName(res.name);\n      setUserDescription(res.about);\n      setUserAvatar(res.avatar);\n    }).catch(err => {\n      console.log(err);\n    });\n    api.getInitialCards().then(res => {\n      setCards([...cards, ...res]);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__picture-container\",\n          onClick: props.onNewAvatar,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userAvatar,\n            className: \"profile__image\",\n            alt: \"\\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u043A\\u0430 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profileImageAfterPath,\n            className: \"profile__avatar-edit\",\n            alt: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__name\",\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__about\",\n              children: userDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"profile__edit-button\",\n            \"aria-label\": \"\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n            onClick: props.onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__button\",\n        onClick: props.onCardAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: [cards.map((card, i) => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onClose: () => {\n          setIsDeletePopupOpen(true);\n        },\n        onCardClick: () => {\n          console.log('click');\n          setData({ ...data,\n            'name': `${card.name}`,\n            'link': `${card.link}`\n          });\n          setIsElementPopupOpen(true);\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)), isElementPopupOpen && /*#__PURE__*/_jsxDEV(ImagePopup, {\n        name: data.name,\n        imageSrc: data.link,\n        isOpen: true,\n        onClose: () => {\n          setIsElementPopupOpen(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), isCardDeletePopupOpen && /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"card-delete\",\n      title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n      formName: \"delete\",\n      formClass: \"popup__form_type_delete-popup\",\n      buttonLabel: \"\\u0414\\u0430\",\n      isOpen: true,\n      onClose: () => {\n        setIsDeletePopupOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"wIesm60ScJQA5aij0E69NkjT7jw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/User/dev/mesto-react/src/components/Main.js"],"names":["React","PopupWithForm","api","Card","profileImageAfterPath","ImagePopup","defaultProfileImagePath","Main","props","isCardDeletePopupOpen","setIsDeletePopupOpen","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","userName","setUserName","isElementPopupOpen","setIsElementPopupOpen","data","setData","cards","setCards","useEffect","getInfoAboutUser","then","res","name","about","avatar","catch","err","console","log","getInitialCards","onNewAvatar","onEditProfile","onCardAdd","map","card","i","link"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,uBAAP,MAAoC,8BAApC;;AAAoE;AAAC;AAAqE;;AAG1I,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB;AAAC;AAA8B;AAC/B,QAAM,CAACC,qBAAD,EAAwBC,oBAAxB,IAAgDV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAtD;AAA8E;AAAC;AAAwB;AACvG;;AAEA;AAAC;AAA8B;AAC/B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,KAAK,CAACW,QAAN,CAAe,wBAAf,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8Bf,KAAK,CAACW,QAAN,CAAgB,GAAEL,uBAAwB,EAA1C,CAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BjB,KAAK,CAACW,QAAN,CAAe,qBAAf,CAAhC;AACA;;AAEA;AAAC;AAA+B;AAChC,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CnB,KAAK,CAACW,QAAN,CAAe,KAAf,CAApD;AAA2E;AAAC;AAAoB;AAChG,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBrB,KAAK,CAACW,QAAN,CAAe;AAAC,YAAO,EAAR;AAAY,YAAO;AAAnB,GAAf,CAAxB;AACA;;AAEA;AAAC;AAA8B;AAC/B,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBvB,KAAK,CAACW,QAAN,CAAe,EAAf,CAA1B;AACA;;AAEAX,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpBtB,IAAAA,GAAG,CAACuB,gBAAJ,GACGC,IADH,CACSC,GAAD,IAAS;AACbV,MAAAA,WAAW,CAACU,GAAG,CAACC,IAAL,CAAX;AACAf,MAAAA,kBAAkB,CAACc,GAAG,CAACE,KAAL,CAAlB;AACAd,MAAAA,aAAa,CAACY,GAAG,CAACG,MAAL,CAAb;AACD,KALH,EAKKC,KALL,CAKYC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AASE9B,IAAAA,GAAG,CAACiC,eAAJ,GACCT,IADD,CACOC,GAAD,IAAS;AACbJ,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGK,GAAd,CAAD,CAAR;AACD,KAHD,EAGGI,KAHH,CAGUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KALD;AAMH,GAhBD,EAgBG,EAhBH;AAkBA,sBACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,4BADZ;AAEE,UAAA,OAAO,EAAExB,KAAK,CAAC4B,WAFjB;AAAA,kCAIE;AACE,YAAA,GAAG,EAAEtB,UADP;AAEE,YAAA,SAAS,EAAC,gBAFZ;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE;AACE,YAAA,GAAG,EAAEV,qBADP;AAEE,YAAA,SAAS,EAAC,sBAFZ;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA,wBAA+BY;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA,wBAA+BJ;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,sBAFZ;AAGE,0BAAW,2HAHb;AAIE,YAAA,OAAO,EAAEJ,KAAK,CAAC6B;AAJjB;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA8BE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAE7B,KAAK,CAAC8B;AAHjB;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqCE;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA,iBACGhB,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT,QAAC,IAAD;AAAM,QAAA,IAAI,EAAED,IAAZ;AAA0B,QAAA,OAAO,EAAE,MAAM;AACvC9B,UAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,SAFD;AAEG,QAAA,WAAW,EAAE,MAAM;AAClBuB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAb,UAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,oBAAS,GAAEoB,IAAI,CAACZ,IAAK,EAFf;AAGN,oBAAS,GAAEY,IAAI,CAACE,IAAK;AAHf,WAAD,CAAP;AAKAvB,UAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH;AAVD,SAAuBsB,CAAvB;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAkBGvB,kBAAkB,iBACjB,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEE,IAAI,CAACQ,IAAvB;AAA6B,QAAA,QAAQ,EAAER,IAAI,CAACsB,IAA5C;AAAkD,QAAA,MAAM,EAAE,IAA1D;AAAgE,QAAA,OAAO,EAAE,MAAM;AAC7EvB,UAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AAFD;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArCF,EA+DGV,qBAAqB,iBACpB,QAAC,aAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,KAAK,EAAC,0DAFR;AAGE,MAAA,QAAQ,EAAC,QAHX;AAIE,MAAA,SAAS,EAAC,+BAJZ;AAKE,MAAA,WAAW,EAAC,cALd;AAME,MAAA,MAAM,EAAE,IANV;AAOE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AATH;AAAA;AAAA;AAAA;AAAA,YAhEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD;;GAxHQH,I;;KAAAA,I;AA0HT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { api } from \"../utils/Api\";\r\nimport Card from \"./Card\";\r\nimport profileImageAfterPath from \"../images/profile__image_after.svg\";\r\nimport ImagePopup from \"./ImagePopup\"\r\nimport defaultProfileImagePath from \"../images/profile__image.jpg\"; {/* дефолтная картинка, если у пользователя отсутствует соединение */}\r\n\r\n\r\nfunction Main(props) {\r\n  {/*_states_of_overlays______*/}\r\n  const [isCardDeletePopupOpen, setIsDeletePopupOpen] = React.useState(false);  {/* card-delete-popup */}\r\n  /*---------------------------*/\r\n\r\n  {/*_states_of_userData______*/}\r\n  const [userDescription, setUserDescription] = React.useState('Hard to write on React');\r\n  const [userAvatar, setUserAvatar] = React.useState(`${defaultProfileImagePath}`);\r\n  const [userName, setUserName] = React.useState('Typical-nedo-junior');\r\n  /*---------------------------*/\r\n\r\n  {/*_state_of_imagePopup______*/}\r\n  const [isElementPopupOpen, setIsElementPopupOpen] = React.useState(false); {/* element-popup */}\r\n  const [data, setData] = React.useState({'name':'', 'link':''});\r\n  /*---------------------------*/\r\n\r\n  {/*_state_of_cardArray______*/}\r\n  const [cards, setCards] = React.useState([]);\r\n  /*---------------------------*/\r\n\r\n  React.useEffect(() => {\r\n    api.getInfoAboutUser()\r\n      .then((res) => {\r\n        setUserName(res.name);\r\n        setUserDescription(res.about);\r\n        setUserAvatar(res.avatar)\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n      api.getInitialCards()\r\n      .then((res) => {\r\n        setCards([...cards, ...res]);\r\n      }).catch((err) => {\r\n        console.log(err)\r\n      });\r\n  }, [])\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__main-container\">\r\n          <div\r\n            className=\"profile__picture-container\"\r\n            onClick={props.onNewAvatar}\r\n          >\r\n            <img\r\n              src={userAvatar}\r\n              className=\"profile__image\"\r\n              alt=\"аватарка пользователя\"\r\n            />\r\n            <img\r\n              src={profileImageAfterPath}\r\n              className=\"profile__avatar-edit\"\r\n              alt=\"Редактирование\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__text\">\r\n              <h1 className=\"profile__name\">{userName}</h1>\r\n              <p className=\"profile__about\">{userDescription}</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"profile__edit-button\"\r\n              aria-label=\"редактировать профиль\"\r\n              onClick={props.onEditProfile}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"profile__button\"\r\n          onClick={props.onCardAdd}\r\n        />\r\n      </section>\r\n      <section className=\"elements\">\r\n        {cards.map((card, i) => (\r\n          <Card card={card} key={i} onClose={() => {\r\n            setIsDeletePopupOpen(true);\r\n          }} onCardClick={() => {\r\n              console.log('click');\r\n              setData({\r\n                ...data,\r\n                'name': `${card.name}`,\r\n                'link': `${card.link}`,\r\n              })\r\n              setIsElementPopupOpen(true);\r\n          }}/>\r\n        )\r\n        )}\r\n        {/*___________overlays*_____________*/}\r\n\r\n        {/*.element-popup.*/}\r\n        {isElementPopupOpen && (\r\n          <ImagePopup name={data.name} imageSrc={data.link} isOpen={true} onClose={() => {\r\n            setIsElementPopupOpen(false);\r\n          }}/>\r\n        )}\r\n      </section>\r\n\r\n      {/*.card-delete-popup.*/}\r\n      {isCardDeletePopupOpen && (\r\n        <PopupWithForm\r\n          name=\"card-delete\"\r\n          title=\"Вы уверены?\"\r\n          formName=\"delete\"\r\n          formClass=\"popup__form_type_delete-popup\"\r\n          buttonLabel=\"Да\"\r\n          isOpen={true}\r\n          onClose={() => {\r\n            setIsDeletePopupOpen(false);\r\n          }}\r\n        >\r\n        </PopupWithForm>\r\n      )}\r\n\r\n      \r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}