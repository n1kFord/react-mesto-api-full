{"ast":null,"code":"import _classCallCheck from\"C:/Users/User/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/User/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._adress=options.baseUrl;this._token=options.headers.authorization;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"getInfoAboutUser\",value:function getInfoAboutUser(){return fetch(\"\".concat(this._adress,\"/users/me\"),{headers:{authorization:\"\".concat(this._token)}}).then(this._checkResponse).then(function(data){return data;});}},{key:\"setInfoAboutUser\",value:function setInfoAboutUser(info){return fetch(\"\".concat(this._adress,\"/users/me\"),{method:\"PATCH\",headers:{authorization:\"\".concat(this._token),\"Content-Type\":\"application/json\"},body:JSON.stringify({name:\"\".concat(info.fullname),about:\"\".concat(info.about)})}).then(this._checkResponse);}},{key:\"uploadNewAvatar\",value:function uploadNewAvatar(link){return fetch(\"\".concat(this._adress,\"/users/me/avatar\"),{method:\"PATCH\",headers:{authorization:\"\".concat(this._token),\"Content-Type\":\"application/json\"},body:JSON.stringify({avatar:\"\".concat(link)})}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._adress,\"/cards\"),{headers:{authorization:\"\".concat(this._token)}}).then(this._checkResponse).then(function(data){return data;});}},{key:\"addNewCard\",value:function addNewCard(info){return fetch(\"\".concat(this._adress,\"/cards\"),{method:\"POST\",headers:{authorization:\"\".concat(this._token),\"Content-Type\":\"application/json\"},body:JSON.stringify({name:\"\".concat(info.cardname),link:\"\".concat(info.link)})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._adress,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:{authorization:\"\".concat(this._token),\"Content-Type\":\"application/json\"}}).then(this._checkResponse);}},{key:\"likeCard\",value:function likeCard(cardId){return fetch(\"\".concat(this._adress,\"/cards/\").concat(cardId,\"/likes\"),{method:\"PUT\",headers:{authorization:\"\".concat(this._token),\"Content-Type\":\"application/json\"}}).then(this._checkResponse);}},{key:\"unlikeCard\",value:function unlikeCard(cardId){return fetch(\"\".concat(this._adress,\"/cards/\").concat(cardId,\"/likes\"),{method:\"DELETE\",headers:{authorization:\"\".concat(this._token),\"Content-Type\":\"application/json\"}}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){return fetch(\"\".concat(this._adress,\"/cards/\").concat(cardId,\"/likes\"),{method:isLiked?'PUT':'DELETE',headers:{authorization:\"\".concat(this._token),\"Content-Type\":\"application/json\"}}).then(this._checkResponse);}}]);return Api;}();/*-----------------*/export var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-35\",headers:{authorization:\"21fda1be-d25d-4e26-98fa-e3e3d631dc10\",\"Content-Type\":\"application/json\"}});/* api */","map":{"version":3,"sources":["C:/Users/User/dev/react-mesto-auth/src/utils/Api.js"],"names":["Api","options","_adress","baseUrl","_token","headers","authorization","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","data","info","method","body","JSON","stringify","name","fullname","about","link","avatar","cardname","cardId","isLiked","api"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._adress = options.baseUrl;\r\n    this._token = options.headers.authorization;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  getInfoAboutUser() {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n      },\r\n    })\r\n      .then(this._checkResponse)\r\n      .then((data) => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  setInfoAboutUser(info) {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${info.fullname}`,\r\n        about: `${info.about}`,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  uploadNewAvatar(link) {\r\n    return fetch(`${this._adress}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: `${link}`,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._adress}/cards`, {\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n      },\r\n    })\r\n      .then(this._checkResponse)\r\n      .then((data) => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  addNewCard(info) {\r\n    return fetch(`${this._adress}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${info.cardname}`,\r\n        link: `${info.link}`,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._adress}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  unlikeCard(cardId) {\r\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked){\r\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\r\n      method: isLiked ? 'PUT' : 'DELETE',\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n}\r\n\r\n/*-----------------*/\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-35\",\r\n  headers: {\r\n    authorization: \"21fda1be-d25d-4e26-98fa-e3e3d631dc10\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n}); /* api */\r\n\r\n"]},"metadata":{},"sourceType":"module"}