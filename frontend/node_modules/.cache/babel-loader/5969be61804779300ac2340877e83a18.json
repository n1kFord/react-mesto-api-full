{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\dev\\\\mesto-react\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { api } from \"../utils/Api\";\nimport { currentUserContext } from \"../contexts/CurrentUserContext\";\nimport Card from \"./Card\";\nimport profileImageAfterPath from \"../images/profile__image_after.svg\";\nimport defaultProfileImagePath from \"../images/profile__image.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /* дефолтная картинка, если у пользователя отсутствует соединение */\n}\n\nfunction Main(props) {\n  _s();\n\n  const user = React.useContext(currentUserContext);\n  console.log(user);\n  /*_state_of_cardArray______*/\n\n  const [cards, setCards] = React.useState([]);\n  /*---------------------------*/\n\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    console.log(card);\n    const isLiked = card.likes.some(i => i._id === user._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      console.log(newCard);\n      setCards(state => state.map(c => {\n        return c._id === card._id ? newCard : c;\n      }));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__picture-container\",\n          onClick: props.onNewAvatar,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            className: \"profile__image\",\n            alt: \"\\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\\u043A\\u0430 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profileImageAfterPath,\n            className: \"profile__avatar-edit\",\n            alt: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__name\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile__about\",\n              children: user.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"profile__edit-button\",\n            \"aria-label\": \"\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n            onClick: props.onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__button\",\n        onClick: props.onCardAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: [cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        currentUser: user,\n        onClose: props.onCardDelete,\n        onClick: () => {\n          props.onCardClick(card.name, card.link);\n        },\n        onLike: () => {\n          handleCardLike(card);\n        }\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"fSWBeKX3v+zoaUvFmNzKmrUTuz0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/User/dev/mesto-react/src/components/Main.js"],"names":["React","api","currentUserContext","Card","profileImageAfterPath","defaultProfileImagePath","Main","props","user","useContext","console","log","cards","setCards","useState","useEffect","getInitialCards","then","res","catch","err","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","onNewAvatar","avatar","name","description","onEditProfile","onCardAdd","onCardDelete","onCardClick","link"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { api } from \"../utils/Api\";\r\nimport { currentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport Card from \"./Card\";\r\nimport profileImageAfterPath from \"../images/profile__image_after.svg\";\r\nimport defaultProfileImagePath from \"../images/profile__image.jpg\"; {/* дефолтная картинка, если у пользователя отсутствует соединение */}\r\n\r\nfunction Main(props) {\r\n  const user = React.useContext(currentUserContext);\r\n  console.log(user);\r\n  /*_state_of_cardArray______*/\r\n  const [cards, setCards] = React.useState([]);\r\n  /*---------------------------*/\r\n\r\n  React.useEffect(() => {\r\n    api\r\n      .getInitialCards()\r\n      .then((res) => {\r\n        setCards(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    console.log(card);\r\n    const isLiked = card.likes.some(i => i._id === user._id);\r\n    \r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\r\n        console.log(newCard)\r\n        setCards((state) => state.map((c) => {\r\n          return c._id === card._id ? newCard : c;\r\n        }));\r\n    });\r\n} \r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__main-container\">\r\n          <div\r\n            className=\"profile__picture-container\"\r\n            onClick={props.onNewAvatar}\r\n          >\r\n            <img\r\n              src={user.avatar}\r\n              className=\"profile__image\"\r\n              alt=\"аватарка пользователя\"\r\n            />\r\n            <img\r\n              src={profileImageAfterPath}\r\n              className=\"profile__avatar-edit\"\r\n              alt=\"Редактирование\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__text\">\r\n              <h1 className=\"profile__name\">{user.name}</h1>\r\n              <p className=\"profile__about\">{user.description}</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"profile__edit-button\"\r\n              aria-label=\"редактировать профиль\"\r\n              onClick={props.onEditProfile}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"profile__button\"\r\n          onClick={props.onCardAdd}\r\n        />\r\n      </section>\r\n      <section className=\"elements\">\r\n        {cards.map(card => (\r\n          <Card\r\n            card={card}\r\n            key={card._id}\r\n            currentUser={user}\r\n            onClose={props.onCardDelete}\r\n            onClick={() => {\r\n              props.onCardClick(card.name, card.link)\r\n            }}\r\n            onLike={() => {\r\n              handleCardLike(card);\r\n            }}\r\n          />\r\n        ))} {/* первоначальный рендер карточек */}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}