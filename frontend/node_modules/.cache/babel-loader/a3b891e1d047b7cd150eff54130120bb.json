{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._adress = options.baseUrl;\n    this._token = options.headers.authorization;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getInfoAboutUser() {\n    return fetch(`${this._adress}/users/me`, {\n      headers: {\n        authorization: `${this._token}`\n      }\n    }).then(this._checkResponse).then(data => {\n      return data;\n    });\n  }\n\n  setInfoAboutUser(info) {\n    return fetch(`${this._adress}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `${this._token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: `${info.fullname}`,\n        about: `${info.about}`\n      })\n    }).then(this._checkResponse);\n  }\n\n  uploadNewAvatar(link) {\n    return fetch(`${this._adress}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `${this._token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: `${link}`\n      })\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._adress}/cards`, {\n      headers: {\n        authorization: `${this._token}`\n      }\n    }).then(this._checkResponse).then(data => {\n      return data;\n    });\n  }\n\n  addNewCard(info) {\n    return fetch(`${this._adress}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: `${this._token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: `${info.cardname}`,\n        link: `${info.link}`\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._adress}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `${this._token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `${this._token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n\n  unlikeCard(cardId) {\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `${this._token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: {\n        authorization: `${this._token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n\n}\n/*-----------------*/\n\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-35\",\n  headers: {\n    authorization: \"21fda1be-d25d-4e26-98fa-e3e3d631dc10\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n/* api */","map":{"version":3,"sources":["C:/Users/User/dev/react-mesto-auth/src/utils/Api.js"],"names":["Api","constructor","options","_adress","baseUrl","_token","headers","authorization","_checkResponse","res","ok","json","Promise","reject","status","getInfoAboutUser","fetch","then","data","setInfoAboutUser","info","method","body","JSON","stringify","name","fullname","about","uploadNewAvatar","link","avatar","getInitialCards","addNewCard","cardname","deleteCard","cardId","likeCard","unlikeCard","changeLikeCardStatus","isLiked","api"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._adress = options.baseUrl;\r\n    this._token = options.headers.authorization;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n\r\n  getInfoAboutUser() {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n      },\r\n    })\r\n      .then(this._checkResponse)\r\n      .then((data) => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  setInfoAboutUser(info) {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${info.fullname}`,\r\n        about: `${info.about}`,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  uploadNewAvatar(link) {\r\n    return fetch(`${this._adress}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: `${link}`,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._adress}/cards`, {\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n      },\r\n    })\r\n      .then(this._checkResponse)\r\n      .then((data) => {\r\n        return data;\r\n      });\r\n  }\r\n\r\n  addNewCard(info) {\r\n    return fetch(`${this._adress}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: `${info.cardname}`,\r\n        link: `${info.link}`,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._adress}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  unlikeCard(cardId) {\r\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked){\r\n    return fetch(`${this._adress}/cards/${cardId}/likes`, {\r\n      method: isLiked ? 'PUT' : 'DELETE',\r\n      headers: {\r\n        authorization: `${this._token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n}\r\n\r\n/*-----------------*/\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-35\",\r\n  headers: {\r\n    authorization: \"21fda1be-d25d-4e26-98fa-e3e3d631dc10\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n}); /* api */\r\n\r\n"]},"metadata":{},"sourceType":"module"}